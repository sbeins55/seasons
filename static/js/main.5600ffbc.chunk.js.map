{"version":3,"sources":["SeasonDisplay.js","TextLoader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","console","log","lat","month","season","latitude","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","TextLoader","loadMessage","defaultProps","App","state","error","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","message","src_SeasonDisplay_0","src_TextLoader","getContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,gBACNC,SAAU,eA0BCE,EAdO,SAAAC,GAClBC,QAAQC,IAAIF,EAAMG,KACpB,IAViBA,EAAKC,EAUhBC,GAVWF,EAUQH,EAAMM,UAVTF,GAUmB,IAAIG,MAAOC,YATxC,GAAKJ,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIDM,EAGFf,EAAaW,GAAhCT,EAHqBa,EAGrBb,KAAMC,EAHeY,EAGfZ,SAEd,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBAAoBR,GAClCK,EAAAC,EAAAC,cAAA,KAAGC,UAAW,qBAAuBhB,EAAW,UAChDa,EAAAC,EAAAC,cAAA,UAAKhB,GACLc,EAAAC,EAAAC,cAAA,KAAGC,UAAW,sBAAwBhB,EAAW,YC7BjDiB,EAAa,SAAAd,GACjB,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBb,EAAMe,eAKjDD,EAAWE,aAAe,CACtBD,YAAa,cAGFD,QCTTG,6MACJC,MAAQ,CACNf,IAAK,KACLgB,MAAO,uFAGW,IAAAC,EAAAC,KAClBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GACEN,EAAKO,SAAS,CACZxB,IAAKuB,EAASE,OAAOtB,YAGzB,SAAAuB,GAAG,OAAIT,EAAKO,SAAS,CAAER,MAAOU,EAAIC,iDAKpC,OAAMT,KAAKH,MAAMf,IACRO,EAAAC,EAAAC,cAACmB,EAAD,CAAezB,SAAUe,KAAKH,MAAMf,MAGvCkB,KAAKH,MAAMC,MACRT,EAAAC,EAAAC,cAAA,qBAAaS,KAAKH,MAAMC,OAG1BT,EAAAC,EAAAC,cAACoB,EAAD,CAAYjB,YAAY,oEAK/B,OAAOM,KAAKY,oBA/BEC,IAAMC,WAmCxBC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.5600ffbc.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\nimport React from \"react\";\n\nconst seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach!\",\n    iconName: \"sun\"\n  },\n  winter: {\n    text: \"Brr it's cold\",\n    iconName: \"snowflake\"\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat < 0 ? \"winter\" : \"summer\";\n  }\n};\n\nconst SeasonDisplay = props => {\n    console.log(props.lat);\n  const season = getSeason(props.latitude, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n\n  return (\n    <div className={\"season-display \" + season}>\n      <i className={\"icon-left massive \" + iconName + \" icon\"} />\n      <h1>{text}</h1>\n      <i className={\"icon-right massive \" + iconName + \" icon\"} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","import React from \"react\";\n\nconst TextLoader = props => {\n  return (\n    <div className=\"ui active inverted dimmer\">\n      <div className=\"ui big text loader\">{props.loadMessage}</div>\n    </div>\n  );\n};\n\nTextLoader.defaultProps = {\n    loadMessage: 'Loading...'\n};\n\nexport default TextLoader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport TextLoader from \"./TextLoader\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    error: \"\"\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({\n          lat: position.coords.latitude\n        });\n      },\n      err => this.setState({ error: err.message })\n    );\n  }\n\n  getContent() {\n    if (!!this.state.lat) {\n      return <SeasonDisplay latitude={this.state.lat} />;\n    }\n\n    if (!!this.state.error) {\n      return <div>Error: {this.state.error}</div>;\n    }\n\n    return <TextLoader loadMessage=\"Please Allow Location Services\" />;\n  }\n\n  // Define render that returns JSX\n  render() {\n    return this.getContent()\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}